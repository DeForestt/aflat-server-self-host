.needs <std>
import Result from "Utils/Result";
import Map from "Utils/Map";
import Server from "HTTP/Server";
import GET, POST, PUT, DELETE from "HTTP/Endpoints";
import Middleware from "HTTP/Middleware";
import HTTPMessage, HTTPResponce from "HTTP";
import Endpoints from "HTTP/Endpoint";
import Content from "Web/Content";
import {print} from "String" under str;
import {accept, reject} from "Utils/Result" under res;

import Index from "./src/UI/Index";

class AflatServer signs Server {
	Index indexHTMX = new Index();
	
	Map index() : Endpoints("/") {
		return {
			"GET": [AflatServer my] => {
				let resp = new HTTPResponce(my.indexHTMX.render(), "200", "OK");
				resp.addHeader("Content-Type", "text/html");
				return res.accept(resp);
			}
		};
	};

	AflatServer init() {
		return my;
	};
};


int main() {
	let server = AflatServer();
	server.listen();
	return 0;
};
